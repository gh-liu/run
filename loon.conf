[General]
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS server
dns-server = system,1.0.0.1,8.8.8.8,114.114.114.114,119.29.29.29,223.5.5.5
# Doh server, only for Wireformat
# https://doh.pub/dns-query https://dns.alidns.com/dns-query
doh-server = https://dns.google/dns-query
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
proxy-test-url = http://www.qualcomm.cn/generate_204
test-timeout = 3
# resource-parser = http://www.example.com/parser.js
# ssid-trigger = SSID-DIRECT
# real-ip = *.apple.com, *apple.com

[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）


[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL


[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
香港节点 = NameRegex, FilterKey = "(?i)(港|HK|Hong)"
台湾节点 = NameRegex, FilterKey = "(?i)(台|TW|Tai)"
日本节点 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国节点 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国节点 = NameRegex, FilterKey = "(?i)(美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
狮城节点 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"
菲国节点 = NameRegex, FilterKey = "(?i)(菲律宾|菲|PH|Philippines)"

[Proxy Group]
# 选择节点模式
# LC = select,ray,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/US.png
PH = select,菲国节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/PH.png
HK = select,香港节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/HK.png
TW = select,台湾节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/TW.png
JP = select,日本节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/JP.png
KR = select,韩国节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/KR.png
US = select,美国节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/US.png
SG = select,狮城节点,img-url=https://raw.githubusercontent.com/gh-liu/run/main/img/flags_png/SG.png

Default= select,PROXY,HK,TW,JP,KR,US,SG,PH,DIRECT

Apple = select,DIRECT,HK,TW,JP,KR,US,SG,PH,PROXY

Spotify = select,PH,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT

Telegram = select,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
GitHub = select,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
Speedtest = select,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT

Amazon = select,Default,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
PayPal = select,Default,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
YouTube = select,Default,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT

# TikTok = select,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
# Netflix = select,HK,TW,JP,KR,US,SG,PH,PROXY,DIRECT
# Microsoft = select,HK,TW,JP,KR,US,SG,PROXY,DIRECT

# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
# Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
# Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
# SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
# LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
# Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
Final = select,PROXY,DIRECT,Default

[Rule]
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Default,REJECT
# Options:no-resolve(no-resolve(only for cidr))
DOMAIN,google.com,Default
DOMAIN,pdst.fm,Default
# GeoIP China
GEOIP,CN,DIRECT
FINAL,Final

[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising.list, policy=REJECT, tag=Advertising,enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising_Domain.list, policy=REJECT, tag=Advertising_Domain,enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/EasyPrivacy/EasyPrivacy.list, policy=REJECT, tag=EasyPrivacy,enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/EasyPrivacy/EasyPrivacy_Domain.list, policy=REJECT, tag=EasyPrivacy_Domain,enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TestFlight/TestFlight.list, policy=Apple, tag=TestFlight, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=Apple, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube, enabled=true
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, policy=Netflix, tag=Netflix, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Amazon/Amazon.list, policy=Amazon, tag=Amazon, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=Microsoft, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/PayPal/PayPal.list, policy=PayPal, tag=PayPal, enabled=true
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, policy=TikTok, tag=TikTok, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, policy=Speedtest, tag=Speedtest, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GitHub/GitHub.list, policy=GitHub, tag=GitHub, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, policy=Default, tag=GlobalMedia, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy.list, policy==Default, tag=Proxy, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy_Domain.list, policy==Default, tag=Proxy_Domain,enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, policy=DIRECT, tag=China, enabled=true


[Rewrite]
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
# https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=auto,enable=true

[Host]
#可以指定一下四种模式：
# 1、指定域名使用对应的IP地址
# 2、将域名指向另一个域名
# 3、指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
# 4、指定具体的SSID环境下使用特定的DNS服务器
# *.testflight.apple.com = server:8.8.4.4
# ssid:LOON WIFI = server:system

[Script]
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# generic  通用型脚本，可用在操作节点/策略组中，执行是会带入节点名称和策略组名称，脚本必须在开启NE时

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

# network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, tag=changeModel,enable=true

# generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/generic_example.js,tag=GeoLocation,timeout=10,img-url=location.fill.viewfinder.system

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, tag=AdvertisingLite, enabled=false
https://raw.githubusercontent.com/VirgilClyne/VirgilClyne/main/modules/DNS/DNS.plugin, tag=DNS, enabled=true

[MITM]
enable = false